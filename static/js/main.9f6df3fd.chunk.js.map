{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","todos","selectedUser","selectedUserId","onTitle","onSelect","className","type","name","autoComplete","onChange","event","target","value","map","todo","key","id","cn","completed","checked","readOnly","title","userId","onClick","defaultProps","PropTypes","arrayOf","shape","CurrentUser","email","phone","clear","getTodos","fetch","then","response","json","result","data","getUser","App","state","todosFromServer","filteredTodos","setState","clearUser","searchByTitle","filter","toLowerCase","includes","searchByCompleteness","completeness","todosBySelect","componentDidMount","a","componentDidUpdate","prevProps","user","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f6df3fd.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const TodoList = ({\n  todos,\n  selectedUser,\n  selectedUserId,\n  onTitle,\n  onSelect,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <section className=\"TodoList__filters\">\n      <input\n        className=\"TodoList__find\"\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        onChange={event => onTitle(event.target.value)}\n      />\n\n      <select\n        className=\"TodoList__select\"\n        onChange={event => onSelect(event.target.value)}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </section>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={cn('TodoList__item', {\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            })}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={cn('TodoList__user-button', 'button', {\n                'TodoList__user-button--selected':\n                selectedUserId === todo.userId,\n              })}\n              type=\"button\"\n              onClick={() => selectedUser(todo.userId)}\n            >\n              User&nbsp;\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      userId: PropTypes.number,\n      completed: PropTypes.bool,\n    }),\n  ),\n  selectedUserId: PropTypes.number,\n  selectedUser: PropTypes.func.isRequired,\n  onTitle: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: '',\n      userId: '',\n      completed: null,\n    }),\n  ),\n  selectedUserId: 0,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({\n  id,\n  name,\n  email,\n  phone,\n  clear,\n}) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        {`Selected user: ${id}`}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">\n      {name}\n    </h3>\n\n    <p className=\"CurrentUser__email\">\n      {email}\n    </p>\n\n    <p className=\"CurrentUser__phone\">\n      {phone}\n    </p>\n    <button\n      type=\"button\"\n      className=\"CurrentUser__button button\"\n      onClick={clear}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  clear: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n","const API_TODOS = `https://mate-api.herokuapp.com/todos`;\nconst USERS = `https://mate-api.herokuapp.com/users/`;\n\nexport const getTodos = () => fetch(API_TODOS)\n  .then(response => response.json())\n  .then(result => result.data);\n\nexport const getUser = userId => fetch(`${USERS}${userId}`)\n  .then(response => response.json())\n  .then(result => result.data);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport { getTodos, getUser } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todosFromServer: [],\n    filteredTodos: [],\n    selectedUserId: 0,\n    selectedUser: [],\n  };\n\n  selectedUser = (selectedUserId) => {\n    this.setState({ selectedUserId });\n  };\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n      selectedUser: [],\n    });\n  }\n\n  searchByTitle = (title) => {\n    this.setState(state => ({\n      filteredTodos: [...state.todosFromServer].filter((todo) => {\n        if (!title) {\n          return todo;\n        }\n\n        if (todo.title !== null) {\n          return todo.title.toLowerCase()\n            .includes(title.toLowerCase());\n        }\n\n        return null;\n      }),\n    }));\n  };\n\n  searchByCompleteness = (completeness) => {\n    const { todosFromServer } = this.state;\n\n    const todosBySelect = todosFromServer.filter((todo) => {\n      switch (completeness) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n\n    this.setState({ filteredTodos: todosBySelect });\n  };\n\n  componentDidMount = async() => {\n    const todos = await getTodos();\n\n    this.setState({\n      todosFromServer: todos,\n      filteredTodos: todos,\n    });\n  };\n\n  componentDidUpdate = (prevProps) => {\n    const { selectedUserId, selectedUser } = this.state;\n\n    if (selectedUserId !== 0\n      && selectedUserId\n      && selectedUserId !== selectedUser.id) {\n      getUser(selectedUserId)\n        .then((user) => {\n          if (user) {\n            this.setState({ selectedUser: user });\n          } else {\n            const defaultUser = {\n              id: '',\n              name: 'No user added',\n            };\n\n            this.setState({ selectedUser: defaultUser });\n          }\n        });\n    }\n  }\n\n  render() {\n    const { filteredTodos, selectedUserId, selectedUser } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={filteredTodos}\n            selectedUserId={selectedUserId}\n            selectedUser={this.selectedUser}\n            onTitle={this.searchByTitle}\n            onSelect={this.searchByCompleteness}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId && selectedUser ? (\n              <CurrentUser\n                {...selectedUser}\n                clear={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}